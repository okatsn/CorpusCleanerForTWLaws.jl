var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = CorpusCleanerForTWLaws","category":"page"},{"location":"#CorpusCleanerForTWLaws","page":"Home","title":"CorpusCleanerForTWLaws","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for CorpusCleanerForTWLaws.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [CorpusCleanerForTWLaws]","category":"page"},{"location":"#Base.Dict-Tuple{CorpusCleanerForTWLaws.CorpusType}","page":"Home","title":"Base.Dict","text":"CorpusCleanerForTWLaws.Dict(c::CorpusType) is a constructor of Dict for corpus of CorpusType.\n\n\n\n\n\n","category":"method"},{"location":"#CorpusCleanerForTWLaws.CorpusFormal","page":"Home","title":"CorpusCleanerForTWLaws.CorpusFormal","text":"The corpus format for LoRA training.\n\nstruct CorpusFormal <: CorpusType\n    instruction\n    input\n    output\nend\n\n\n\n\n\n","category":"type"},{"location":"#CorpusCleanerForTWLaws.CorpusFormal-Tuple{CorpusJudicalYuan}","page":"Home","title":"CorpusCleanerForTWLaws.CorpusFormal","text":"CorpusFormal(cp1::CorpusJudicalYuan) formats CorpusJudicalYuan <: CorpusType to CorpusFormal.\n\n\n\n\n\n","category":"method"},{"location":"#CorpusCleanerForTWLaws.CorpusJudicalYuan","page":"Home","title":"CorpusCleanerForTWLaws.CorpusJudicalYuan","text":"mutable struct CorpusJudicalYuan <: CorpusType\n    question::String\n    answer::String\nend\n\n\n\n\n\n","category":"type"},{"location":"#CorpusCleanerForTWLaws.CorpusJudicalYuan-Tuple{Dict}","page":"Home","title":"CorpusCleanerForTWLaws.CorpusJudicalYuan","text":"CorpusJudicalYuan(d::Dict) construct the object CorpusJudicalYuan with a dictionary having keys \"question\" and \"answer\".\n\n\n\n\n\n","category":"method"},{"location":"#CorpusCleanerForTWLaws.CorpusType","page":"Home","title":"CorpusCleanerForTWLaws.CorpusType","text":"abstract type CorpusType\n\n\n\n\n\n","category":"type"},{"location":"#Base.print-Tuple{IO, CorpusCleanerForTWLaws.CorpusType}","page":"Home","title":"Base.print","text":"CorpusCleanerForTWLaws.print(io::IO, cp1::CorpusType) do JSON.print for corpus::CorpusType.\n\n\n\n\n\n","category":"method"},{"location":"#Base.print-Tuple{IO, Vector{<:CorpusCleanerForTWLaws.CorpusType}}","page":"Home","title":"Base.print","text":"CorpusCleanerForTWLaws.print(io::IO, cps::Vector{<:CorpusType}) do JSON.print for corpus::CorpusType.\n\n\n\n\n\n","category":"method"},{"location":"#CorpusCleanerForTWLaws.clean!-Tuple{CorpusJudicalYuan}","page":"Home","title":"CorpusCleanerForTWLaws.clean!","text":"clean!(cp1::CorpusJudicalYuan) clean corpus of CorpusType CorpusJudicalYuan.\n\n\n\n\n\n","category":"method"},{"location":"#CorpusCleanerForTWLaws.formaldict-Tuple{CorpusCleanerForTWLaws.CorpusType}","page":"Home","title":"CorpusCleanerForTWLaws.formaldict","text":"formaldict(cp1::CorpusType) returns a \"formal\" dictionary according to the format of CorpusFormal.\n\n\n\n\n\n","category":"method"},{"location":"#CorpusCleanerForTWLaws.replacex-Tuple{Any, Vararg{Any}}","page":"Home","title":"CorpusCleanerForTWLaws.replacex","text":"replacex(content, p...::Pair) replace content with pairs of strings. Currently, replace supports only one string substitution (i.e., replace(c, \"hello\" => \"world\"))\n\nThe key difference between replacex(content, p...::Pair) and replace(content, p...::Pair) is that replace executes replace in order.\n\n\n\n\n\n","category":"method"}]
}
